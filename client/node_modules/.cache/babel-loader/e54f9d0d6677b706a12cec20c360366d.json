{"ast":null,"code":"var _jsxFileName = \"/home/billywonka/Coding/Coursework/Ironhack/Week8 - Trip-Packer/react-frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport TripIndex from './components/trips/TripIndex.js';\nimport TripDetails from './components/trips/TripDetails.js';\nimport Signup from './components/Signup.js';\nimport Login from './components/Login.js'; // import AuthService from './services/AuthService.js';\n\nimport Navbar from './components/Navbar.js';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllTrips = () => {\n      axios.get(\"http://localhost:5000/api/trips\", {\n        withCredentials: true\n      }).then(responseFromApi => {\n        this.setState({\n          listOfTrips: responseFromApi.data,\n          ready: true\n        });\n      });\n    };\n\n    this.getCurrentlyLoggedInUser = () => {\n      // this.service.currentUser()\n      axios.get('http://localhost:5000/api/auth/getcurrentuser', {\n        withCredentials: true\n      }).then(response => {\n        // console.log('fetching the user now')\n        let theUser = response.data;\n        this.setState({\n          currentlyLoggedIn: theUser\n        });\n        return theUser;\n      }).catch(() => {\n        this.setState({\n          currentlyLoggedIn: null\n        });\n      });\n    };\n\n    this.toggleForm = whichForm => {\n      let theForm;\n\n      if (whichForm === \"signup\") {\n        theForm = 'signupShowing';\n      } else {\n        theForm = 'loginShowing';\n      }\n\n      this.setState({\n        [theForm]: !this.state[theForm]\n      });\n    };\n\n    this.logout = () => {\n      axios.post('http://localhost:5000/api/auth/logout', {}, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n        this.getCurrentlyLoggedInUser();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      listOfTrips: [],\n      currentlyLoggedIn: null,\n      ready: false,\n      signupShowing: false,\n      loginShowing: false\n    }; // this.service = new AuthService();\n  } // getGeocodeKey = () => {\n  //   axios.get(`http://localhost:5000/api/geocode`, {withCredentials: true})\n  //   .then(responseFromApi => {\n  //     this.setState({\n  //       listOfTrips: responseFromApi.data, ready: true\n  //     })\n  //   })\n  // }\n\n\n  componentDidMount() {\n    this.getAllTrips();\n    this.getCurrentlyLoggedInUser(); // this.getGeocodeKey();\n  }\n\n  render() {\n    console.log('=-=-=-=-=-=-=-', this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      theUser: this.state.currentlyLoggedIn // pleaseLogOut = {()=> this.service.logout()}\n      ,\n      pleaseLogOut: this.logout,\n      toggleForm: this.toggleForm,\n      getUser: this.getCurrentlyLoggedInUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), this.state.signupShowing && React.createElement(Signup, {\n      getUser: this.getCurrentlyLoggedInUser,\n      toggleForm: this.toggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), this.state.loginShowing && React.createElement(Login, {\n      getUser: this.getCurrentlyLoggedInUser,\n      toggleForm: this.toggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/api/trips\",\n      render: props => React.createElement(TripIndex, Object.assign({}, props, {\n        allTheTrips: this.state.listOfTrips,\n        getData: this.getAllTrips,\n        ready: this.state.ready,\n        theUser: this.state.currentlyLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/api/trips/:theID\",\n      render: props => React.createElement(TripDetails, Object.assign({}, props, {\n        allTheTrips: this.state.listOfTrips,\n        ready: this.state.ready,\n        getData: this.getAllTrips,\n        theUser: this.state.currentlyLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/billywonka/Coding/Coursework/Ironhack/Week8 - Trip-Packer/react-frontend/src/App.js"],"names":["React","Route","Switch","TripIndex","TripDetails","Signup","Login","Navbar","axios","App","Component","constructor","props","getAllTrips","get","withCredentials","then","responseFromApi","setState","listOfTrips","data","ready","getCurrentlyLoggedInUser","response","theUser","currentlyLoggedIn","catch","toggleForm","whichForm","theForm","state","logout","post","console","log","err","signupShowing","loginShowing","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {Route, Switch} from 'react-router-dom';\n\nimport TripIndex from './components/trips/TripIndex.js'\nimport TripDetails from './components/trips/TripDetails.js';\n\nimport Signup from './components/Signup.js';\nimport Login from './components/Login.js';\n// import AuthService from './services/AuthService.js';\n\nimport Navbar from './components/Navbar.js'\n\nimport axios from 'axios';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      listOfTrips: [],\n      currentlyLoggedIn: null,\n      ready: false,\n      signupShowing: false,\n      loginShowing: false,\n    };\n\n    // this.service = new AuthService();\n  }\n\n  // getGeocodeKey = () => {\n  //   axios.get(`http://localhost:5000/api/geocode`, {withCredentials: true})\n  //   .then(responseFromApi => {\n  //     this.setState({\n  //       listOfTrips: responseFromApi.data, ready: true\n  //     })\n  //   })\n  // }\n\n  getAllTrips = () => {\n    axios.get(`http://localhost:5000/api/trips`, {withCredentials: true})\n    .then(responseFromApi => {\n      this.setState({\n        listOfTrips: responseFromApi.data, ready: true\n      })\n    })\n  }\n\n  getCurrentlyLoggedInUser = () =>{\n    // this.service.currentUser()\n    axios.get('http://localhost:5000/api/auth/getcurrentuser', {withCredentials: true})\n    .then((response)=>{\n      // console.log('fetching the user now')\n      let theUser = response.data;\n      this.setState({currentlyLoggedIn: theUser})\n      return theUser;\n    })\n    .catch(()=>{\n      this.setState({currentlyLoggedIn: null})\n    })\n  }\n\n  toggleForm = (whichForm) =>{\n    let theForm;\n\n    if(whichForm === \"signup\"){\n      theForm = 'signupShowing'\n    } else {\n      theForm = 'loginShowing'\n    }\n    this.setState({[theForm]: !this.state[theForm]})\n  }\n\n  componentDidMount() {\n      this.getAllTrips();\n      this.getCurrentlyLoggedInUser();\n      // this.getGeocodeKey();\n  }\n\n  logout = () =>{\n    axios.post('http://localhost:5000/api/auth/logout', {}, {withCredentials: true})\n    .then((response)=>{\n      console.log(response);\n      this.getCurrentlyLoggedInUser();  \n    })\n    .catch((err)=>{\n      console.log(err)\n    })\n  }\n\n  render(){\n    console.log('=-=-=-=-=-=-=-',this.state);\n\n    return (\n      <div>\n        <Navbar \n          theUser = {this.state.currentlyLoggedIn} \n          // pleaseLogOut = {()=> this.service.logout()}\n          pleaseLogOut = {this.logout}\n          toggleForm = {this.toggleForm}\n          getUser = {this.getCurrentlyLoggedInUser}\n        />\n\n        {this.state.signupShowing && \n          <Signup getUser = {this.getCurrentlyLoggedInUser}\n            toggleForm = {this.toggleForm}\n          />\n        }\n\n        {this.state.loginShowing && \n          <Login getUser = {this.getCurrentlyLoggedInUser}\n            toggleForm = {this.toggleForm}\n          />\n        }\n\n        <Switch>\n          <Route exact path=\"/api/trips\" render ={(props)=> <TripIndex\n            {...props} \n            allTheTrips ={this.state.listOfTrips}\n            getData = {this.getAllTrips}\n            ready = {this.state.ready}\n            theUser = {this.state.currentlyLoggedIn}\n          />} />\n\n          <Route exact path=\"/api/trips/:theID\" render ={(props)=> <TripDetails\n            {...props} \n            allTheTrips ={this.state.listOfTrips}\n            ready = {this.state.ready}\n            getData = {this.getAllTrips}\n            theUser = {this.state.currentlyLoggedIn}\n          />} />\n        </Switch>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}